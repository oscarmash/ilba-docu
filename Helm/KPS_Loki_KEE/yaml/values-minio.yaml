mode: standalone

persistence:
  enabled: true
  storageClass: "csi-rbd-sc"
  size: 20Gi

drivesPerNode: 1
replicas: 1
pools: 1

ingress:
  enabled: true
  ingressClassName: "nginx"
  labels: {}
  annotations: {}
  path: /
  hosts:
    - minio-api.ilba.cat
  tls: []

consoleIngress:
  enabled: true
  ingressClassName: "nginx"
  labels: {}
  annotations: {}
  path: /
  hosts:
    - minio-console.ilba.cat
  tls: []

resources:
  requests:
    memory: 2Gi

users:
  - accessKey: admin
    secretKey: Er2Ophgundeat2
    policy: consoleAdmin
  - accessKey: loki
    secretKey: We2spertaudO12
    policy: loki-policy

policies:
- name: loki-policy
  statements:
    - resources:
        - 'arn:aws:s3:::loki-*/*'
      actions:
        - "s3:AbortMultipartUpload"
        - "s3:GetObject"
        - "s3:DeleteObject"
        - "s3:PutObject"
        - "s3:ListMultipartUploadParts"
    - resources:
        - 'arn:aws:s3:::loki-*'
      actions:
        - "s3:CreateBucket"
        - "s3:DeleteBucket"
        - "s3:GetBucketLocation"
        - "s3:ListBucket"
        - "s3:ListBucketMultipartUploads"

buckets:
  - name: loki-k8s
    policy: none
    purge: false

metrics:
  serviceMonitor:
    enabled: true
    includeNode: true
    additionalLabels:
      release: prometheus
    namespace: minio
    interval: 30s
    scrapeTimeout: 10s
    annotations:
      prometheus.io/path: /minio/v2/metrics/cluster
      prometheus.io/port: "9000"
      prometheus.io/scrape: "true"

service:
  annotations:
    prometheus.io/path: /minio/v2/metrics/cluster
    prometheus.io/port: "9000"
    prometheus.io/scrape: "true"
